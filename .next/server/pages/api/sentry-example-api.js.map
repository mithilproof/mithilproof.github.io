{"version":3,"file":"../pages/api/sentry-example-api.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACAA;AACe,SAASA,OAAAA,CAAQC,IAAI,EAAEC,GAAG;AACvC,UAAM,IAAIC,KAAM;AAElB;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,GAAG,UAAU,EAAE;AAClC;AACA;AACA;AACA,IAAI,mBAAmB,GAAG,SAAS,CAAC;AACpC;AACA,IAAI,SAAS,IAAI,aAAa,IAAI,OAAO,aAAa,CAAC,OAAO,KAAK,UAAU,EAAE;AAC/E;AACA,EAAE,mBAAmB,GAAG,aAAa,CAAC,OAAO,CAAC;AAC9C,CAAC,MAAM,IAAI,OAAO,aAAa,KAAK,UAAU,EAAE;AAChD;AACA,EAAE,mBAAmB,GAAG,aAAa,CAAC;AACtC,CAAC;AACD;AACA,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,IAAI,EAAE,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACK,MAAC,MAAM,GAAG;AACf,EAAE,GAAG,UAAU;AACf,EAAE,GAAG,EAAE;AACP,IAAI,GAAG,UAAU,CAAC,GAAG;AACrB,IAAI,gBAAgB,EAAE,IAAI;AAC1B,GAAG;AACH,EAAE;AACF;AACA,IAAI,cAAc,GAAG,mBAAmB,CAAC;AACzC;AACA,IAAI,cAAc,EAAE;AACpB,EAAE,cAAc,GAAG,oEAA+B,CAAC,cAAc,EAAE,yBAAyB,CAAC,CAAC;AAC9F,CAAC;AACD;AACA,IAAI,cAAc,IAAI,SAAS,EAAE,EAEhC;AACD;AACK,MAAC,gBAAgB,GAAG;;;;;;;;;;;;AClDzB,IAAIC,mCAAmC,gBAAkB,cAAcC,SAASC;AAChFF,gCAAgC,CAAC,+BAA+B,GAAG;AACnEA,gCAAgC,CAAC,iBAAiB,GAAG;IAAC,MAAK;AAAuB;AAClFA,gCAAgC,CAAC,2BAA2B,GAAG;AAE/D,mEAAmE;AACnE,8EAA8E;AAC9E,6DAA6D;AAEpB;AAEzCG,gDAAWC,CAAC;IACVC,KAAK;IAEL,4EAA4E;IAC5EC,kBAAkB;IAElB,2GAA2G;IAC3GC,OAAO;AACT","sources":["webpack://mithilproof/external commonjs \"@sentry/nextjs\"","webpack://mithilproof/pages/api/sentry-example-api.js","webpack://mithilproof/sentry-wrapper-module","webpack://mithilproof/./sentry.server.config.js"],"sourcesContent":["module.exports = require(\"@sentry/nextjs\");","// A faulty API route to test Sentry's error monitoring\nexport default function handler(_req, res) {\n  throw new Error(\"Sentry Example API Route Error\");\n  res.status(200).json({ name: \"John Doe\" });\n}\n","import * as origModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n/*\n * This file is a template for the code which will be substituted when our webpack loader handles API files in the\n * `pages/` directory.\n *\n * We use `__SENTRY_WRAPPING_TARGET_FILE__.cjs` as a placeholder for the path to the file being wrapped. Because it's not a real package,\n * this causes both TS and ESLint to complain, hence the pragma comments below.\n */\n\nconst userApiModule = origModule ;\n\n// Default to undefined. It's possible for Next.js users to not define any exports/handlers in an API route. If that is\n// the case Next.js wil crash during runtime but the Sentry SDK should definitely not crash so we need tohandle it.\nlet userProvidedHandler = undefined;\n\nif ('default' in userApiModule && typeof userApiModule.default === 'function') {\n  // Handle when user defines via ESM export: `export default myFunction;`\n  userProvidedHandler = userApiModule.default;\n} else if (typeof userApiModule === 'function') {\n  // Handle when user defines via CJS export: \"module.exports = myFunction;\"\n  userProvidedHandler = userApiModule;\n}\n\nconst origConfig = userApiModule.config || {};\n\n// Setting `externalResolver` to `true` prevents nextjs from throwing a warning in dev about API routes resolving\n// without sending a response. It's a false positive (a response is sent, but only after we flush our send queue), and\n// we throw a warning of our own to tell folks that, but it's better if we just don't have to deal with it in the first\n// place.\nconst config = {\n  ...origConfig,\n  api: {\n    ...origConfig.api,\n    externalResolver: true,\n  },\n};\n\nlet wrappedHandler = userProvidedHandler;\n\nif (wrappedHandler) {\n  wrappedHandler = Sentry.wrapApiHandlerWithSentry(wrappedHandler, '/api/sentry-example-api');\n}\n\nif (wrappedHandler && undefined) {\n  wrappedHandler = Sentry.wrapApiHandlerWithSentryVercelCrons(wrappedHandler, undefined);\n}\n\nconst wrappedHandler$1 = wrappedHandler;\n\nexport { config, wrappedHandler$1 as default };\n","var _sentryCollisionFreeGlobalObject = typeof window === \"undefined\" ? global : window;\n_sentryCollisionFreeGlobalObject[\"__sentryRewritesTunnelPath__\"] = \"/monitoring\";\n_sentryCollisionFreeGlobalObject[\"SENTRY_RELEASE\"] = {\"id\":\"UsB4kd93JH2R3DhPEGD3R\"};\n_sentryCollisionFreeGlobalObject[\"__rewriteFramesDistDir__\"] = \".next\";\n\n// This file configures the initialization of Sentry on the server.\n// The config you add here will be used whenever the server handles a request.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\nimport * as Sentry from \"@sentry/nextjs\";\n\nSentry.init({\n  dsn: \"https://4c6d6212510b4cc69eff28705edeedea@o1430018.ingest.sentry.io/4505414371704832\",\n\n  // Adjust this value in production, or use tracesSampler for greater control\n  tracesSampleRate: 1,\n\n  // Setting this option to true will print useful information to the console while you're setting up Sentry.\n  debug: false,\n});\n"],"names":["handler","_req","res","Error","_sentryCollisionFreeGlobalObject","global","window","Sentry","init","dsn","tracesSampleRate","debug"],"sourceRoot":""}